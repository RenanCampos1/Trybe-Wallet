{"ast":null,"code":"// Coloque aqui suas actions\nconst USER_LOGIN = 'USER_LOGIN';\nconst UPDATE_TOTAL = 'UPDATE_TOTAL';\nconst UPDATE_CURRENT_EXPENSE = 'UPDATE_CURRENT_EXPENSE';\nconst GET_COINS = 'GET_COINS';\nconst ON_EDITOR = 'ON_EDITOR';\nconst ADD_EXPENSE = 'ADD_EXPENSE';\nconst REMOVE_EXPENSE = 'REMOVE_EXPENSE';\n\nconst userLogin = _ref => {\n  let {\n    email\n  } = _ref;\n  return {\n    type: USER_LOGIN,\n    email\n  };\n};\n\nconst actionGetCoins = coins => ({\n  type: GET_COINS,\n  payload: Object.keys(coins).filter(e => e !== 'USDT')\n});\n\nconst updateTotal = () => ({\n  type: UPDATE_TOTAL\n});\n\nconst updateCurrentExpense = (name, value) => ({\n  type: UPDATE_CURRENT_EXPENSE,\n  payload: {\n    [name]: value\n  }\n});\n\nconst onEditor = id => ({\n  type: ON_EDITOR,\n  id\n});\n\nexport function fetchApi() {\n  return async dispatch => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    dispatch(actionGetCoins(data));\n  };\n}\n\nconst addExpense = (expense, exchanges) => ({\n  type: ADD_EXPENSE,\n  payload: { ...expense,\n    exchangeRates: exchanges\n  }\n});\n\nexport function fetchAddExpense(expense) {\n  return async dispatch => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    dispatch(addExpense(expense, data));\n  };\n}\nexport const removeAction = id => ({\n  type: REMOVE_EXPENSE,\n  id\n});\nexport { USER_LOGIN, userLogin, updateTotal, UPDATE_TOTAL, updateCurrentExpense, UPDATE_CURRENT_EXPENSE, GET_COINS, actionGetCoins, ON_EDITOR, onEditor, ADD_EXPENSE, addExpense, REMOVE_EXPENSE };","map":{"version":3,"names":["USER_LOGIN","UPDATE_TOTAL","UPDATE_CURRENT_EXPENSE","GET_COINS","ON_EDITOR","ADD_EXPENSE","REMOVE_EXPENSE","userLogin","email","type","actionGetCoins","coins","payload","Object","keys","filter","e","updateTotal","updateCurrentExpense","name","value","onEditor","id","fetchApi","dispatch","response","fetch","data","json","addExpense","expense","exchanges","exchangeRates","fetchAddExpense","removeAction"],"sources":["/home/renanc/Projetos/Trybe-Wallet/src/redux/actions/index.js"],"sourcesContent":["// Coloque aqui suas actions\nconst USER_LOGIN = 'USER_LOGIN';\nconst UPDATE_TOTAL = 'UPDATE_TOTAL';\nconst UPDATE_CURRENT_EXPENSE = 'UPDATE_CURRENT_EXPENSE';\nconst GET_COINS = 'GET_COINS';\nconst ON_EDITOR = 'ON_EDITOR';\nconst ADD_EXPENSE = 'ADD_EXPENSE';\nconst REMOVE_EXPENSE = 'REMOVE_EXPENSE';\n\nconst userLogin = ({ email }) => ({\n  type: USER_LOGIN,\n  email,\n});\n\nconst actionGetCoins = (coins) => ({\n  type: GET_COINS,\n  payload: Object.keys(coins).filter((e) => e !== 'USDT'),\n});\n\nconst updateTotal = () => ({\n  type: UPDATE_TOTAL,\n});\n\nconst updateCurrentExpense = (name, value) => ({\n  type: UPDATE_CURRENT_EXPENSE,\n  payload: {\n    [name]: value,\n  },\n});\n\nconst onEditor = (id) => ({\n  type: ON_EDITOR,\n  id,\n});\n\nexport function fetchApi() {\n  return async (dispatch) => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    dispatch(actionGetCoins(data));\n  };\n}\n\nconst addExpense = (expense, exchanges) => ({\n  type: ADD_EXPENSE,\n  payload: {\n    ...expense,\n    exchangeRates: exchanges,\n  },\n});\n\nexport function fetchAddExpense(expense) {\n  return async (dispatch) => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    dispatch(addExpense(expense, data));\n  };\n}\n\nexport const removeAction = (id) => ({\n  type: REMOVE_EXPENSE,\n  id,\n});\n\nexport {\n  USER_LOGIN,\n  userLogin,\n  updateTotal,\n  UPDATE_TOTAL,\n  updateCurrentExpense,\n  UPDATE_CURRENT_EXPENSE,\n  GET_COINS,\n  actionGetCoins,\n  ON_EDITOR,\n  onEditor,\n  ADD_EXPENSE,\n  addExpense,\n  REMOVE_EXPENSE,\n};\n"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAG,YAAnB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,cAAc,GAAG,gBAAvB;;AAEA,MAAMC,SAAS,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAgB;IAChCC,IAAI,EAAET,UAD0B;IAEhCQ;EAFgC,CAAhB;AAAA,CAAlB;;AAKA,MAAME,cAAc,GAAIC,KAAD,KAAY;EACjCF,IAAI,EAAEN,SAD2B;EAEjCS,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,CAA2BC,CAAD,IAAOA,CAAC,KAAK,MAAvC;AAFwB,CAAZ,CAAvB;;AAKA,MAAMC,WAAW,GAAG,OAAO;EACzBR,IAAI,EAAER;AADmB,CAAP,CAApB;;AAIA,MAAMiB,oBAAoB,GAAG,CAACC,IAAD,EAAOC,KAAP,MAAkB;EAC7CX,IAAI,EAAEP,sBADuC;EAE7CU,OAAO,EAAE;IACP,CAACO,IAAD,GAAQC;EADD;AAFoC,CAAlB,CAA7B;;AAOA,MAAMC,QAAQ,GAAIC,EAAD,KAAS;EACxBb,IAAI,EAAEL,SADkB;EAExBkB;AAFwB,CAAT,CAAjB;;AAKA,OAAO,SAASC,QAAT,GAAoB;EACzB,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAJ,QAAQ,CAACd,cAAc,CAACiB,IAAD,CAAf,CAAR;EACD,CAJD;AAKD;;AAED,MAAME,UAAU,GAAG,CAACC,OAAD,EAAUC,SAAV,MAAyB;EAC1CtB,IAAI,EAAEJ,WADoC;EAE1CO,OAAO,EAAE,EACP,GAAGkB,OADI;IAEPE,aAAa,EAAED;EAFR;AAFiC,CAAzB,CAAnB;;AAQA,OAAO,SAASE,eAAT,CAAyBH,OAAzB,EAAkC;EACvC,OAAO,MAAON,QAAP,IAAoB;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAJ,QAAQ,CAACK,UAAU,CAACC,OAAD,EAAUH,IAAV,CAAX,CAAR;EACD,CAJD;AAKD;AAED,OAAO,MAAMO,YAAY,GAAIZ,EAAD,KAAS;EACnCb,IAAI,EAAEH,cAD6B;EAEnCgB;AAFmC,CAAT,CAArB;AAKP,SACEtB,UADF,EAEEO,SAFF,EAGEU,WAHF,EAIEhB,YAJF,EAKEiB,oBALF,EAMEhB,sBANF,EAOEC,SAPF,EAQEO,cARF,EASEN,SATF,EAUEiB,QAVF,EAWEhB,WAXF,EAYEwB,UAZF,EAaEvB,cAbF"},"metadata":{},"sourceType":"module"}